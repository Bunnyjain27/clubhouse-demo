P5JSSOUND1_QUEST_NAME,P5JS - Painting with Sound - Part 1,,,,
P5JSSOUND1_QUEST_SUBTITLE,What you'll do,,,,
P5JSSOUND1_QUEST_DESCRIPTION,Let's start building a way to visualize music in the first part of this activity series! (Part 1),,,,
P5JSSOUND1_1,"Have you ever wanted to make your own music visualizer? If so, now is your chance with p5.js.",daemon,,,
P5JSSOUND1_2,"<b>p5.js</b> has a live online editor we can use - If it doesn't open automatically, use this link: <u><span insert_hyphens=""false"" foreground=""#3584E4"">https://editor.p5js.org/</span></u>",daemon,,,
P5JSSOUND1_3,"p5.js has two main parts: <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">setup()</span></tt> and <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">draw()</span></tt>.  The <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">setup</span></tt> only runs once, while the <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">draw</span></tt> stays running on loop.",daemon,,,
P5JSSOUND1_4,"You can think of <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">setup</span></tt> as where we prepare our canvas and supplies, and <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">draw</span></tt> as where we make our art.",daemon,,,
P5JSSOUND1_5,"Right now, in <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">setup</span></tt>, we're creating a <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">canvas</span></tt> which is 400 pixels by 400 pixels.",daemon,,,
P5JSSOUND1_6,"Next, let's change our background from <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">background(220)</span></tt> to <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">background(150,100,200)</span></tt>. The <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">background</span></tt> function accepts numbers from 0 - 255, and those numbers control the amount of red, green and blue in the color that's displayed. This is called an <b>RGB value</b>, because it describes a color in terms of Red, Green and Blue. Try changing the background to a color of your own!",daemon,,,
P5JSSOUND1_7,"Next, we're going to add some code that will let our progam use your microphone!",daemon,,,
P5JSSOUND1_8,"In our <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">setup()</span></tt> we will add the line <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">input = new p5.AudioIn();</span></tt>  This lets us use the word <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">input</span></tt> to reference our audio input. Be sure to type the line exactly as shown!",daemon,,,
P5JSSOUND1_9,"On the next line, add the line <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">input.start();</span></tt>  This starts the program listening to the audio input.",daemon,,,
P5JSSOUND1_10,"Next, in the <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">draw()</span></tt>, we will create a variable to read the input volume from our microphone.",daemon,,,
P5JSSOUND1_11,"We can do this by adding the line <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">let volume = input.getLevel();</span></tt>",daemon,,,
P5JSSOUND1_12,"With this line we create a variable named <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">volume</span></tt> and let it contain the current volume level that our microphone is detecting. (This will be a value from 0.0 - 1.0)",daemon,,,
P5JSSOUND1_13,"Now, let's do something with the volume.  Let's draw a circle! ",daemon,,,
P5JSSOUND1_14,"Using the <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">circle</span></tt> function, we can draw a circle at the center of the screen using the volume as the width. To do this, add the following line: <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">circle(width/2, height/2, volume*100);</span></tt>",daemon,,,
P5JSSOUND1_15,"Notice how we use <b>width/2</b> and <b>height/2</b> to set the circle to the center of the screen. P5.js lets us use the words <b>width</b> and <b>height</b> as the width and height of the canvas.  If we divide that in half, we will be pointing to the center of the canvas.",daemon,,,
P5JSSOUND1_16,"Also, notice how we are taking the <b>volume</b> and multiplying it by 100 - We have to do this because <b>volume</b> is coming in at a range from 0 - 1, and we want to draw a circle between 0 - 100 pixels wide.  By multiplying by 100, we can bring our volume to a number range we can see. You can increase this number, if you want it to be even bigger!",daemon,,,
P5JSSOUND1_17,"Now, you can press play to see your music animation come to life.",daemon,,,
P5JSSOUND1_18,"You may get a message from your browser asking if it can use your microphone - that's fine, you can tell it to allow this. Don't worry, it'll stop when you close the webpage.",daemon,,,
P5JSSOUND1_19,Now we know how to use the microphone volume to draw!,daemon,,,
P5JSSOUND1_20,"Next time, we'll add more elements to our musical painting. See you then!",daemon,,,
